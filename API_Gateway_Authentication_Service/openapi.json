{
    "openapi": "3.0.0",
    "info": {
        "title": "Subscription Management API",
        "version": "1.0.0-SNAPSHOT",
        "description": "*A RESTful Hypermedia (level 3 of Richardson's Maturity Model) API for a subscription plataform.*\r\n\r\n---\r\n\r\nA subscription management API providing four main abstractions: *subscriptions*, *plans*, *users* , and *dashboard*. \r\n\r\n![Domain Model](/domain-model.svg)\r\n\r\nFollowing hypermedia principles, the API is explorable through its \"billboard\" endpoint `/` which will present an html introductory page as well as a JSON table of contents with the entry points of the API. \r\n\r\nBesides serving \"plain JSON\" representations using `application/json`, the API follows hypermedia principles and sends the HTTP `Link` header as well as supports Hypermedia-enabled media type `application/vnd.pagsousa.hyper+json` retrieved from the project `A Board 4 U` (Paulo Gandra de Sousa, https://bitbucket.org/pag_isep/aboard4u/src/master/).\r\n\r\n## Domain Application Protocol (DAP)\r\n\r\nThe following diagram depicts the Domain Application Protocol (DAP) of the API.\r\n\r\n![DAP](/DAP.svg)\r\n\r\nThe HTTP `Link` header is sent for each resource item (with `rel` set to, e.g.,  `self`,\r\n`create`, `deactivate`, `renew`, `upgrade plan`, `delete`, `login` ,`update` ,`plan`,`user`, `devices`) or collection (with, e.g., `self`, `start`, `prev`, `next`) or subresource like \r\n`subscriptions/:subscriptionID/devices` and `subscriptions/:subscriptionID/plan` (with, e.g., `related`). The presence of the link in the response representation depends\r\non the current state of the resource, for instance, `renew` links are only sent for authenticated and authorized requests and for active subscriptions\r\n\r\n## Custom Link Relations\r\n\r\nThe following list presents the Custom Link Relations used in the media type `application/vnd.pagsousa.hyper+json`\r\n\r\n- `https://aboard4u.herokuapp.com/login` - The target IRI of this relation can be used to obtain an access token to the API.\r\n\r\n- `http://localhost:3000/users` - The target IRI of this relation represents a collection of users. The\r\n                target resource MUST allow `GET` and `PUT` to a\r\n  subresource to add a new member to the user collection, i.e., signup.\r\n\r\n- `http://localhost:3000/subscriptions` -\r\n The target IRI of this relation represents a collection of subscriptions. The\r\n target resource MUST allow `GET` and `POST`. \r\n\r\n- `http://localhost:3000/plans` -The target IRI of this relation represents a collection of subscriptions. The\r\n target resource MUST allow `GET` and `PUT`.\r\n\r\n - `http://localhost:3000/subscriptions/dashboard`- The target IRI of this relation MUST allow to POST an empty request body in\r\norder to augment the context IRI resource with a dashboard. Alternatively, the\r\n                request body MAY contain a `callback` and a `callbackRef`\r\n                property indicating a postback url and correlation id. The response is a `202\r\n                    Accepted`. The caller may issue a GET to the url returned in the\r\n                `Location` header in order to pool the updated dashboard or wait\r\n                for a callback.\r\n\r\n  ## Standard Link Relations\r\n\r\nBesides the custom link relations, the following Standard Link Relations are also used from\r\n[IANA Link Relations] and [Schema.org]\r\n\r\n`self`, `plan`, `devices`, `user`, `related`, `describedBy`\r\n\r\n`start`, `prev`, `next`, `collection`, `item`  \r\n\r\n`search`, `edit`, `renew`, `update`, `upgrade or downgrade plan`, `switch`, `create`\r\n\r\n`help`, `license`, `https://schema.org/softwareVersion`\r\n\r\nFor further information on these standard rel types visit [IANA Link Relations] and [Schema.org]\r\n\r\n[Collection+JSON]: http://amundsen.com/media-types/collection/\r\n[Schema.org]: https://schema.org/docs/full.html\r\n[IANA Link Relations]: https://www.iana.org/assignments/link-relations/link-relations.xml\r\n\r\n---",
        "contact": {
            "type": "array",
            "items": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    }
                }
            }
        },
        "license": {
            "name": "MIT",
            "url": "https://spdx.org/licenses/MIT.html"
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "serverResponseText": {
                "type": "string",
                "maxLength": 2000,
                "pattern": "^[ \\w\\.!?,;:\\-=><\\/&%\\$\\+\\*~#]*$",
                "example": "Success"
            },
            "notFoundResponseText": {
                "type": "string",
                "maxLength": 2000,
                "pattern": "^[ \\w\\.!?,;:\\-=><\\/&%\\$\\+\\*~#]*$",
                "example": "Not Found"
            },
            "notAllowedText": {
                "type": "string",
                "maxLength": 2000,
                "pattern": "^[ \\w\\.!?,;:\\-=><\\/&%\\$\\+\\*~#]*$",
                "example": "Not Allowed"
            },
            "badRequestText": {
                "type": "string",
                "maxLength": 2000,
                "pattern": "^[ \\w\\.!?,;:\\-=><\\/&%\\$\\+\\*~#]*$",
                "example": "Bad Request"
            },
            "forbiddenText": {
                "type": "string",
                "maxLength": 2000,
                "pattern": "^[ \\w\\.!?,;:\\-=><\\/&%\\$\\+\\*~#]*$",
                "example": "Forbidden"
            },
            "unauthorizedText": {
                "type": "string",
                "maxLength": 2000,
                "pattern": "^[ \\w\\.!?,;:\\-=><\\/&%\\$\\+\\*~#]*$",
                "example": "Unauthorized"
            },
            "conflictText": {
                "type": "string",
                "maxLength": 2000,
                "pattern": "^[ \\w\\.!?,;:\\-=><\\/&%\\$\\+\\*~#]*$",
                "example": "Conflict while creating resource"
            },
            "attrAuthzPassword": {
                "type": "string",
                "example": "pr@ga!98",
                "maxLength": 30,
                "pattern": "^[\\w\\-!#\\$?\\+\\*\\.,;&\\/:@]{8,}$"
            },
            "loginForm": {
                "description": "the user form input",
                "type": "object",
                "additionalProperties": false,
                "required": ["username", "password"],
                "properties": {
                    "username": {
                        "$ref": "#/components/schemas/attributeUserName"
                    },
                    "password": {
                        "$ref": "#/components/schemas/attrAuthzPassword"
                    }
                }
            },
            "authzData": {
                "description": "a user profile",
                "type": "object",
                "additionalProperties": false,
                "required": ["id"],
                "properties": {
                    "token": {
                        "$ref": "#/components/schemas/attrToken"
                    }
                }
            },
            "attrPlanID": {
                "type": "string",
                "maxLength": 64,
                "pattern": "^[a-zA-Z]+[\\-\\.\\w]*$",
                "example": "Free"
            },
            "attrUserEmail": {
                "type": "string",
                "maxLength": 50,
                "pattern": "^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$",
                "example": "davide@email.com"
            },
            "attrDeviceName": {
                "type": "string",
                "maxLength": 50,
                "pattern": "^[- \\w\\.!?,;:-=><\\/()&%$+*~#]*$",
                "example": "Iphone"
            },
            "attrDeviceDescription": {
                "type": "string",
                "maxLength": 200,
                "pattern": "^[- \\w\\.!?,;:-=><\\/()&%$+*~#]*$",
                "example": "Mobile"
            },
            "attrMonthlyFee": {
                "type": "number",
                "format": "double",
                "minimum": 0,
                "maximum": 1.8e308,
                "example": 5.99
            },
            "attrAnnualFee": {
                "type": "number",
                "format": "double",
                "minimum": 0,
                "maximum": 1.8e308,
                "example": 59.99
            },
            "attrNumberOfMinutes": {
                "type": "number",
                "format": "int32",
                "minimum": 0,
                "maximum": 2147483647,
                "example": 100
            },
            "atrNumberOfDevice": {
                "type": "number",
                "format": "int32",
                "minimum": 0,
                "maximum": 2147483647,
                "example": 1
            },
            "attrMusicCollections": {
                "type": "number",
                "format": "int32",
                "minimum": 0,
                "maximum": 2147483647,
                "example": 1
            },
            "attributeMusicSuggestions": {
                "type": "string",
                "maxLength": 200,
                "pattern": "^[- \\w\\.!?,;:-=><\\/()&%$+*~#]*$",
                "example": "personalized"
            },
            "attributeUserName": {
                "type": "string",
                "maxLength": 50,
                "pattern": "^[- \\w\\.!?,;:-=><\\/()&%$+*~#]*$",
                "example": "Davide"
            },
            "attributePassword": {
                "type": "string",
                "maxLength": 30,
                "pattern": "^[\\w\\-!#\\$?\\+\\*\\.,;&\\/:@]{8,}$",
                "example": "pr@ga!98"
            },
            "attributeType": {
                "type": "string",
                "enum": ["monthly", "annual"],
                "example": "Premium"
            },
            "attrRenewDate": {
                "description": "The date on which the subscription will renew",
                "type": "string",
                "format": "date",
                "example": "2022-01-01"
            },
            "attrCreateOn": {
                "description": "The date on which the subscription was created",
                "type": "string",
                "format": "date",
                "example": "2021-01-01"
            },
            "attrMonthlyFeeChange": {
                "description": "The monthly fee history",
                "type": "array",
                "items": {
                    "type": "number",
                    "format": "double",
                    "minimum": 0,
                    "maximum": 1.8e308
                },
                "example": [5.99, 6.49, 7.99]
            },
            "attrAnnualFeeChange": {
                "description": "The annual fee history",
                "type": "array",
                "items": {
                    "type": "number",
                    "format": "double",
                    "minimum": 0,
                    "maximum": 1.8e308
                },
                "example": [59.99, 64.99, 79.99]
            },
            "attributeStatus": {
                "description": "The status of the subscription or plan",
                "type": "string",
                "enum": ["active", "inactive"],
                "example": "active"
            },
            "attrToken": {
                "description": "The token of the user",
                "type": "string",
                "maxLength": 100,
                "pattern": "^[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+/=]*$",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
            },
            "planData": {
                "description": "a plan profile",
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "planID",
                    "monthlyFee",
                    "annualFee",
                    "numberOfMinutes",
                    "numberOfDevice",
                    "musicCollections",
                    "musicSuggestions"
                ],
                "properties": {
                    "planID": {
                        "$ref": "#/components/schemas/attrPlanID"
                    },
                    "monthlyFee": {
                        "$ref": "#/components/schemas/attrMonthlyFee"
                    },
                    "annualFee": {
                        "$ref": "#/components/schemas/attrAnnualFee"
                    },
                    "numberOfMinutes": {
                        "$ref": "#/components/schemas/attrNumberOfMinutes"
                    },
                    "numberOfDevice": {
                        "$ref": "#/components/schemas/atrNumberOfDevice"
                    },
                    "musicCollections": {
                        "$ref": "#/components/schemas/attrMusicCollections"
                    },
                    "musicSuggestions": {
                        "$ref": "#/components/schemas/attributeMusicSuggestions"
                    },
                    "annualFeeChange": {
                        "$ref": "#/components/schemas/attrAnnualFeeChange"
                    },
                    "monthlyFeeChange": {
                        "$ref": "#/components/schemas/attrMonthlyFeeChange"
                    },
                    "status": {
                        "$ref": "#/components/schemas/attributeStatus"
                    }
                }
            },
            "deviceID": {
                "description": "The id of the device",
                "type": "string",
                "maxLength": 8,
                "pattern": "^[- \\w\\.!?,;:-=><\\/()&%$+*~#]*$",
                "example": "hbad0z1y"
            },
            "subscriptionID": {
                "description": "The id of the subscription",
                "type": "string",
                "maxLength": 8,
                "pattern": "^[- \\w\\.!?,;:-=><\\/()&%$+*~#]*$",
                "example": "hbad0z1y"
            },
            "subscription": {
                "description": "The subscription of the device",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "maxLength": 8,
                        "pattern": "^[A-Za-z0-9-_=]+$",
                        "example": "hbad0z1y"
                    },
                    "user": {
                        "$ref": "#/components/schemas/attributeUserName"
                    }
                }
            },
            "deviceData": {
                "description": "a device profile",
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "deviceName",
                    "deviceDescription",
                    "deviceID",
                    "subscription"
                ],
                "properties": {
                    "deviceName": {
                        "$ref": "#/components/schemas/attrDeviceName"
                    },
                    "deviceDescription": {
                        "$ref": "#/components/schemas/attrDeviceDescription"
                    },
                    "deviceID": {
                        "$ref": "#/components/schemas/deviceID"
                    },
                    "subscription": {
                        "$ref": "#/components/schemas/subscription"
                    }
                }
            },
            "userData": {
                "description": "a user profile",
                "type": "object",
                "additionalProperties": false,
                "required": ["userName", "password", "role", "userEmail"],
                "properties": {
                    "userName": {
                        "$ref": "#/components/schemas/attributeUserName"
                    },
                    "role": {
                        "$ref": "#/components/schemas/attributeType"
                    },
                    "userEmail": {
                        "$ref": "#/components/schemas/attrUserEmail"
                    },
                    "token": {
                        "$ref": "#/components/schemas/attrToken"
                    }
                }
            },
            "subscriptionData": {
                "description": "a subscription information",
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "planId",
                    "userName",
                    "type",
                    "subscriptionFee",
                    "createdOn",
                    "renewDate"
                ],
                "properties": {
                    "planId": {
                        "$ref": "#/components/schemas/attrPlanID"
                    },
                    "userName": {
                        "$ref": "#/components/schemas/attributeUserName"
                    },
                    "type": {
                        "$ref": "#/components/schemas/attributeType"
                    },
                    "subscriptionFee": {
                        "$ref": "#/components/schemas/attrMonthlyFee"
                    },
                    "createdOn": {
                        "$ref": "#/components/schemas/attrCreateOn"
                    },
                    "renewDate": {
                        "$ref": "#/components/schemas/attrRenewDate"
                    }
                }
            },
            "link": {
                "description": "a link relation element",
                "type": "object",
                "additionalProperties": false,
                "required": ["rel", "href"],
                "properties": {
                    "rel": {
                        "type": "string",
                        "format": "uri",
                        "example": "next"
                    },
                    "href": {
                        "type": "string",
                        "format": "uri",
                        "example": "http://localhost:3000/subscriptions?start=1&n=5"
                    },
                    "title": {
                        "$ref": "#/components/schemas/attrLinkTitle"
                    },
                    "name": {
                        "$ref": "#/components/schemas/attrLinkName"
                    },
                    "type": {
                        "type": "string",
                        "pattern": "^\\w+/[-\\.\\w]+(?:\\+[-\\.\\w]+)?$",
                        "maxLength": 128,
                        "description": "the media type of the target IRI. Can be used to distinguish multiple links with the same `rel` value",
                        "example": "application/json"
                    }
                }
            },
            "attrLinkTitle": {
                "type": "string",
                "maxLength": 250,
                "pattern": "^[\\w\\- \\.!?\\$%#]+$",
                "description": "a user friendly label",
                "example": "Next page"
            },
            "attrLinkName": {
                "type": "string",
                "maxLength": 250,
                "pattern": "^[\\w\\-]+$",
                "description": "a unique identifier for this link. Can be used to distinguish multiple links with the same `rel` value",
                "example": "next"
            },
            "links": {
                "description": "the set of available link relations for this resource in the current context",
                "type": "array",
                "maxItems": 100,
                "items": {
                    "$ref": "#/components/schemas/link"
                }
            },
            "template": {
                "description": "an item creation form template",
                "type": "array",
                "maxItems": 100,
                "items": {
                    "$ref": "#/components/schemas/dataElement"
                }
            },
            "attrDataName": {
                "type": "string",
                "maxLength": 250,
                "pattern": "^[\\w\\-]+$",
                "description": "a unique identifier for this data element",
                "example": "dob"
            },
            "attrDataPrompt": {
                "type": "string",
                "maxLength": 250,
                "pattern": "^[\\w\\- \\.!?\\$%#]+$",
                "description": "a user friendly label",
                "example": "Date of birth"
            },
            "dataElement": {
                "description": "a generic element template",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "data": {
                        "type": "object",
                        "additionalProperties": false,
                        "required": ["name"],
                        "properties": {
                            "name": {
                                "$ref": "#/components/schemas/attrDataName"
                            },
                            "value": {
                                "type": "string",
                                "maxLength": 4096,
                                "pattern": "^.*$"
                            },
                            "prompt": {
                                "$ref": "#/components/schemas/attrDataPrompt"
                            }
                        }
                    }
                }
            },
            "queries": {
                "description": "the set of predefined queries for this collection",
                "type": "array",
                "maxItems": 100,
                "items": {
                    "$ref": "#/components/schemas/query"
                }
            },
            "query": {
                "description": "a predefined search template",
                "type": "object",
                "additionalProperties": false,
                "required": ["rel", "href"],
                "properties": {
                    "rel": {
                        "type": "string",
                        "format": "uri",
                        "example": "next"
                    },
                    "href": {
                        "type": "string",
                        "format": "uri",
                        "example": "https://aboard4u.herokuapp.com/message?first=20&after=asd-345"
                    },
                    "name": {
                        "$ref": "#/components/schemas/attrLinkName"
                    },
                    "title": {
                        "$ref": "#/components/schemas/attrLinkTitle"
                    },
                    "data": {
                        "$ref": "#/components/schemas/dataTemplate"
                    }
                }
            },
            "dataTemplate": {
                "description": "a set of templates",
                "type": "array",
                "maxItems": 100,
                "items": {
                    "$ref": "#/components/schemas/dataElement"
                }
            },
            "subscriptionItem": {
                "description": "a subscription",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/subscriptionData"
                    },
                    "links": {
                        "$ref": "#/components/schemas/links"
                    }
                }
            },
            "subscriptionCollection": {
                "description": "collection of subscription items",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "data": {
                        "type": "array",
                        "maxItems": 500,
                        "items": {
                            "$ref": "#/components/schemas/subscriptionItem"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/links"
                    },
                    "template": {
                        "$ref": "#/components/schemas/template"
                    },
                    "queries": {
                        "$ref": "#/components/schemas/queries"
                    }
                }
            },
            "devicesCollection": {
                "description": "collection of device items",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "data": {
                        "type": "array",
                        "maxItems": 500,
                        "items": {
                            "$ref": "#/components/schemas/deviceItem"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/links"
                    },
                    "template": {
                        "$ref": "#/components/schemas/template"
                    }
                }
            },
            "devicesDataCollection": {
                "description": "collection of devices",
                "type": "array",
                "maxItems": 500,
                "items": {
                    "$ref": "#/components/schemas/deviceData"
                }
            },
            "usersDataCollection": {
                "description": "collection of users",
                "type": "array",
                "maxItems": 500,
                "items": {
                    "$ref": "#/components/schemas/userData"
                }
            },
            "plansDataCollection": {
                "description": "collection of plans",
                "type": "array",
                "maxItems": 500,
                "items": {
                    "$ref": "#/components/schemas/planData"
                }
            },
            "subscriptionsDataCollection": {
                "description": "collection of subscriptions",
                "type": "array",
                "maxItems": 500,
                "items": {
                    "$ref": "#/components/schemas/subscriptionData"
                }
            },
            "usersCollection": {
                "description": "collection of user items",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "data": {
                        "type": "array",
                        "maxItems": 500,
                        "items": {
                            "$ref": "#/components/schemas/userItem"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/links"
                    },
                    "template": {
                        "$ref": "#/components/schemas/template"
                    }
                }
            },
            "deviceItem": {
                "description": "a device",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/deviceData"
                    },
                    "links": {
                        "$ref": "#/components/schemas/links"
                    }
                }
            },
            "plansCollection": {
                "description": "collection of plan items",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "data": {
                        "type": "array",
                        "maxItems": 500,
                        "items": {
                            "$ref": "#/components/schemas/planItem"
                        }
                    },
                    "links": {
                        "$ref": "#/components/schemas/links"
                    },
                    "template": {
                        "$ref": "#/components/schemas/template"
                    }
                }
            },
            "atrPromote": {
                "description": "A boolean attribute indicating whether the plan is promoted",
                "type": "boolean",
                "example": true
            },
            "planItem": {
                "description": "a plan",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/planData"
                    },
                    "links": {
                        "$ref": "#/components/schemas/links"
                    }
                }
            },
            "userItem": {
                "description": "a user",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/userData"
                    },
                    "links": {
                        "$ref": "#/components/schemas/links"
                    }
                }
            },
            "upgradeSubscriptionPlanInput": {
                "description": "input for upgrading a subscription plan",
                "type": "object",
                "additionalProperties": false,
                "required": ["planId"],
                "properties": {
                    "planId": {
                        "$ref": "#/components/schemas/attrPlanID"
                    }
                }
            },
            "switchSubscriptionPlanInput": {
                "description": "input for switching a subscription plan",
                "type": "object",
                "additionalProperties": false,
                "required": ["planId"],
                "properties": {
                    "planId": {
                        "$ref": "#/components/schemas/attrPlanID"
                    }
                }
            },
            "updateDeviceInput": {
                "description": "input for updating a device",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/attrDeviceName"
                    },
                    "description": {
                        "$ref": "#/components/schemas/attrDeviceDescription"
                    }
                }
            },
            "changePlanDetailsInput": {
                "description": "input for changing plan details",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "monthlyFee": {
                        "$ref": "#/components/schemas/attrMonthlyFee"
                    },
                    "numberOFDevices": {
                        "$ref": "#/components/schemas/atrNumberOfDevice"
                    },
                    "devices": {
                        "$ref": "#/components/schemas/atrNumberOfDevice"
                    },
                    "promote": {
                        "$ref": "#/components/schemas/atrPromote"
                    }
                }
            },
            "newPlanInput": {
                "description": "input for creating a new plan",
                "type": "object",
                "additionalProperties": false,
                "required": [
                    "planID",
                    "monthlyFee",
                    "annualFee",
                    "numberOfMinutes",
                    "numberOfDevice",
                    "musicCollections",
                    "musicSuggestions"
                ],
                "properties": {
                    "planID": {
                        "$ref": "#/components/schemas/attrPlanID"
                    },
                    "monthlyFee": {
                        "$ref": "#/components/schemas/attrMonthlyFee"
                    },
                    "annualFee": {
                        "$ref": "#/components/schemas/attrAnnualFee"
                    },
                    "numberOfMinutes": {
                        "$ref": "#/components/schemas/attrNumberOfMinutes"
                    },
                    "numberOfDevice": {
                        "$ref": "#/components/schemas/atrNumberOfDevice"
                    },
                    "musicCollections": {
                        "$ref": "#/components/schemas/attrMusicCollections"
                    },
                    "musicSuggestions": {
                        "$ref": "#/components/schemas/attributeMusicSuggestions"
                    }
                }
            },
            "patchSubscriptionInput": {
                "description": "input for patching a subscription",
                "type": "object",
                "additionalProperties": false,
                "required": ["planID"],
                "properties": {
                    "planID": {
                        "$ref": "#/components/schemas/attrPlanID"
                    }
                }
            },
            "attrRoles": {
                "description": "A string attribute indicating the user role",
                "type": "string",
                "enum": [
                    "admin",
                    "user",
                    "subscriber",
                    "marketing-director",
                    "product-manager"
                ],
                "example": "admin"
            },
            "newSubscriptionInput": {
                "description": "input for creating a new subscription",
                "type": "object",
                "additionalProperties": false,
                "required": ["planID", "deviceID", "type"],
                "properties": {
                    "planID": {
                        "$ref": "#/components/schemas/attrPlanID"
                    },
                    "deviceID": {
                        "$ref": "#/components/schemas/deviceID"
                    },
                    "type": {
                        "$ref": "#/components/schemas/attributeType"
                    }
                }
            },
            "newUserInput": {
                "description": "input for creating a new user",
                "type": "object",
                "additionalProperties": false,
                "required": ["email", "password", "name"],
                "properties": {
                    "email": {
                        "$ref": "#/components/schemas/attrUserEmail"
                    },
                    "password": {
                        "$ref": "#/components/schemas/attrAuthzPassword"
                    },
                    "name": {
                        "$ref": "#/components/schemas/attributeUserName"
                    }
                }
            },
            "newDeviceInput": {
                "description": "input for creating a new device",
                "type": "object",
                "additionalProperties": false,
                "required": ["name", "description"],
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/attrDeviceName"
                    },
                    "description": {
                        "$ref": "#/components/schemas/attrDeviceDescription"
                    }
                }
            },
            "patchUserInput": {
                "description": "input for creating a new user",
                "type": "object",
                "additionalProperties": false,
                "properties": {
                    "email": {
                        "$ref": "#/components/schemas/attrUserEmail"
                    },
                    "password": {
                        "$ref": "#/components/schemas/attrAuthzPassword"
                    },
                    "roles": {
                        "$ref": "#/components/schemas/attrRoles"
                    }
                }
            }
        },
        "responses": {
            "OkAuthzJson": {
                "description": "Ok",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/authzData"
                        }
                    }
                }
            },
            "CreateUserItem": {
                "description": "Created",
                "headers": {
                    "Location": {
                        "schema": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "the id (location) of the newly created user"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/userData"
                        }
                    },
                    "application/vnd.pagsousa.hyper+json": {
                        "schema": {
                            "$ref": "#/components/schemas/userItem"
                        }
                    }
                }
            },
            "OkUserCollection": {
                "description": "the user collection",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/usersDataCollection"
                        }
                    },
                    "application/vnd.pagsousa.hyper+json": {
                        "schema": {
                            "$ref": "#/components/schemas/usersCollection"
                        }
                    }
                }
            },
            "OKUser": {
                "description": "the user item",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/userData"
                        }
                    },
                    "application/vnd.pagsousa.hyper+json": {
                        "schema": {
                            "$ref": "#/components/schemas/userItem"
                        }
                    }
                },
                "links": {
                    "self": {
                        "operationId": "getUser",
                        "parameters": {
                            "id": "$response.body#/id"
                        }
                    },
                    "login": {
                        "operationId": "login"
                    },
                    "collection": {
                        "operationId": "getUsers"
                    },
                    "update": {
                        "operationId": "updateUser",
                        "parameters": {
                            "id": "$response.body#/id"
                        }
                    },
                    "delete": {
                        "operationId": "deleteUser",
                        "parameters": {
                            "id": "$response.body#/id"
                        }
                    }
                }
            },
            "PreconditionFailedUserItem": {
                "description": "if-match header caused conflict",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/userData"
                        }
                    },
                    "application/vnd.pagsousa.hyper+json": {
                        "schema": {
                            "$ref": "#/components/schemas/userItem"
                        }
                    }
                }
            },
            "OK": {
                "description": "Ok.",
                "content": {
                    "text/plain": {
                        "schema": {
                            "$ref": "#/components/schemas/serverResponseText"
                        }
                    }
                }
            },
            "No content": {
                "description": "Success but no content.",
                "content": {
                    "text/plain": {
                        "schema": {
                            "$ref": "#/components/schemas/serverResponseText"
                        }
                    }
                }
            },
            "NotFound": {
                "description": "Not Found.",
                "content": {
                    "text/plain": {
                        "schema": {
                            "$ref": "#/components/schemas/notFoundResponseText"
                        }
                    }
                }
            },
            "NotAllowed": {
                "description": "Not Allowed.",
                "content": {
                    "text/plain": {
                        "schema": {
                            "$ref": "#/components/schemas/notAllowedText"
                        }
                    }
                }
            },
            "BadRequest": {
                "description": "Bad Request.",
                "content": {
                    "text/plain": {
                        "schema": {
                            "$ref": "#/components/schemas/badRequestText"
                        }
                    }
                }
            },
            "Unauthorized": {
                "description": "Unauthorized. You must first authenticate in order to perform this request.",
                "content": {
                    "text/plain": {
                        "schema": {
                            "$ref": "#/components/schemas/unauthorizedText"
                        }
                    }
                }
            },
            "Forbidden": {
                "description": "Forbidden. You do not have enough permissions to perform this request.",
                "content": {
                    "text/plain": {
                        "schema": {
                            "$ref": "#/components/schemas/forbiddenText"
                        }
                    }
                }
            },
            "Conflict": {
                "description": "Conflict. The request could not be completed due to a conflict with the current state of the target resource.",
                "content": {
                    "text/plain": {
                        "schema": {
                            "$ref": "#/components/schemas/conflictText"
                        }
                    }
                }
            },
            "CreateDevice": {
                "description": "Created",
                "headers": {
                    "Location": {
                        "schema": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "the id (location) of the newly created device"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/deviceData"
                        }
                    },
                    "application/vnd.pagsousa.hyper+json": {
                        "schema": {
                            "$ref": "#/components/schemas/deviceItem"
                        }
                    }
                }
            },
            "OkDeviceCollection": {
                "description": "the device collection",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/devicesDataCollection"
                        }
                    },
                    "application/vnd.pagsousa.hyper+json": {
                        "schema": {
                            "$ref": "#/components/schemas/devicesCollection"
                        }
                    }
                }
            },
            "OKDeviceItem": {
                "description": "the device item",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/deviceData"
                        }
                    },
                    "application/vnd.pagsousa.hyper+json": {
                        "schema": {
                            "$ref": "#/components/schemas/deviceItem"
                        }
                    }
                },
                "links": {
                    "self": {
                        "operationId": "getDevice",
                        "parameters": {
                            "id": "$response.body#/id"
                        }
                    },
                    "subscription": {
                        "operationId": "getDeviceSubscription",
                        "parameters": {
                            "id": "$response.body#/id"
                        }
                    },
                    "delete": {
                        "operationId": "deleteDevice",
                        "parameters": {
                            "id": "$response.body#/id"
                        }
                    },
                    "update": {
                        "operationId": "updateDevice",
                        "parameters": {
                            "id": "$response.body#/id"
                        }
                    }
                }
            },
            "PreconditionFailedDeviceItem": {
                "description": "if-match header caused conflict",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/deviceData"
                        }
                    },
                    "application/vnd.pagsousa.hyper+json": {
                        "schema": {
                            "$ref": "#/components/schemas/deviceItem"
                        }
                    }
                }
            },
            "CreateSubscription": {
                "description": "Created",
                "headers": {
                    "Location": {
                        "schema": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "the id (location) of the newly created subscription"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/subscriptionData"
                        }
                    },
                    "application/vnd.pagsousa.hyper+json": {
                        "schema": {
                            "$ref": "#/components/schemas/subscriptionItem"
                        }
                    }
                }
            },
            "OkSubscriptionCollection": {
                "description": "the subscription collection",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/subscriptionsDataCollection"
                        }
                    },
                    "application/vnd.pagsousa.hyper+json": {
                        "schema": {
                            "$ref": "#/components/schemas/subscriptionCollection"
                        }
                    }
                }
            },
            "OkSubscriptionItem": {
                "description": "the subscription item",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/subscriptionData"
                        }
                    },
                    "application/vnd.pagsousa.hyper+json": {
                        "schema": {
                            "$ref": "#/components/schemas/subscriptionItem"
                        }
                    }
                },
                "links": {
                    "self": {
                        "operationId": "getSubscription",
                        "parameters": {
                            "id": "$response.body#/id"
                        }
                    },
                    "plan": {
                        "operationId": "getSubscriptionPlan",
                        "parameters": {
                            "id": "$response.body#/id"
                        }
                    },
                    "user": {
                        "operationId": "getSubscriptionUser",
                        "parameters": {
                            "id": "$response.body#/id"
                        }
                    },
                    "devices": {
                        "operationId": "getSubscriptionDevices",
                        "parameters": {
                            "id": "$response.body#/id"
                        }
                    },
                    "renew": {
                        "operationId": "renewSubscription",
                        "parameters": {
                            "id": "$response.body#/id"
                        }
                    },
                    "deactivate": {
                        "operationId": "deactivateSubscription",
                        "parameters": {
                            "id": "$response.body#/id"
                        }
                    },
                    "upgrade or downgrade": {
                        "operationId": "upgradeOrDowngradeSubscription",
                        "parameters": {
                            "id": "$response.body#/id"
                        }
                    },
                    "collection": {
                        "operationId": "getSubscriptions"
                    }
                }
            },
            "PreconditionFailedSubscriptionItem": {
                "description": "if-match header caused conflict",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/subscriptionData"
                        }
                    },
                    "application/vnd.pagsousa.hyper+json": {
                        "schema": {
                            "$ref": "#/components/schemas/subscriptionItem"
                        }
                    }
                }
            },
            "CreatePlan": {
                "description": "Created",
                "headers": {
                    "Location": {
                        "schema": {
                            "type": "string",
                            "format": "uri"
                        },
                        "description": "the id (location) of the newly created plan"
                    }
                },
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/planData"
                        }
                    },
                    "application/vnd.pagsousa.hyper+json": {
                        "schema": {
                            "$ref": "#/components/schemas/planItem"
                        }
                    }
                }
            },
            "OkPlanCollection": {
                "description": "the plan collection",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/plansDataCollection"
                        }
                    },
                    "application/vnd.pagsousa.hyper+json": {
                        "schema": {
                            "$ref": "#/components/schemas/plansCollection"
                        }
                    }
                }
            },
            "OkPlanItem": {
                "description": "the plan item",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/planData"
                        }
                    },
                    "application/vnd.pagsousa.hyper+json": {
                        "schema": {
                            "$ref": "#/components/schemas/planItem"
                        }
                    }
                },
                "links": {
                    "self": {
                        "operationId": "getPlan",
                        "parameters": {
                            "id": "$response.body#/id"
                        }
                    },
                    "collection": {
                        "operationId": "getPlans"
                    },
                    "update": {
                        "operationId": "updatePlan",
                        "parameters": {
                            "id": "$response.body#/id"
                        }
                    }
                }
            },
            "PreconditionFailedPlanItem": {
                "description": "if-match header caused conflict",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/planData"
                        }
                    },
                    "application/vnd.pagsousa.hyper+json": {
                        "schema": {
                            "$ref": "#/components/schemas/planItem"
                        }
                    }
                }
            }
        }
    },
    "security": [
        {
            "bearerAuth": []
        }
    ],
    "servers": [
        {
            "url": "http://localhost:3000/"
        }
    ],
    "paths": {
        "/login": {
            "post": {
                "summary": "authenticates a user",
                "description": "returns the authentication ID token (JWT) to use in further API calls.",
                "tags": ["Authz"],
                "security": [],
                "requestBody": {
                    "description": "login data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/loginForm"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "a JSON web token (JWT) required to login.",
                        "content": {
                            "application/jwt": {
                                "schema": {
                                    "type": "string",
                                    "maxLength": 1024,
                                    "pattern": "^[A-Za-z0-9-_=]+\\.[A-Za-z0-9-_=]+\\.?[A-Za-z0-9-_.+/=]*$",
                                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJodHRwczovL3NwYWNlYXBpLmNvbS9ncmFwaHFsIjp7InJvbGVzIjpbImFzdHJvbmF1dCJdLCJwZXJtaXNzaW9ucyI6WyJyZWFkOm93bl91c2VyIl19LCJpYXQiOjE1OTQyNTI2NjMsImV4cCI6MTU5NDMzOTA2Mywic3ViIjoiNjc4OTAifQ.Z1JPE53ca1JaxwDTlnofa3hwpS0PGdRLUMIrC7M3FCI"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "wrong Password"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            }
        },
        "/users": {
            "get": {
                "summary": "get all users",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "description": "returns all users",
                "tags": ["Users"],
                "parameters": [
                    {
                        "in": "query",
                        "name": "first",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1,
                            "maximum": 500,
                            "format": "int32"
                        },
                        "description": "the first user to return",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "n",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 6,
                            "maximum": 500,
                            "format": "int32"
                        },
                        "description": "the number of users to return",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OkUserCollection"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/users/{userID}": {
            "get": {
                "description": "returns one user",
                "summary": "get one user",
                "tags": ["Users"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "schema": {
                            "$ref": "#/components/schemas/attributeUserName"
                        },
                        "description": "the user ID",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OKUser"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "put": {
                "description": "creates one user",
                "summary": "creates one user",
                "tags": ["Users"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "schema": {
                            "$ref": "#/components/schemas/attributeUserName"
                        },
                        "description": "the user ID",
                        "required": true
                    }
                ],
                "security": [],
                "requestBody": {
                    "description": "the user data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/newUserInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/CreateUserItem"
                    },
                    "409": {
                        "$ref": "#/components/responses/Conflict"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    }
                }
            },
            "delete": {
                "description": "deletes one user",
                "summary": "deletes one user",
                "tags": ["Users"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "schema": {
                            "$ref": "#/components/schemas/attributeUserName"
                        },
                        "description": "the user ID",
                        "required": true
                    },
                    {
                        "in": "header",
                        "name": "if-match",
                        "description": "Revision control",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "$ref": "#/components/responses/OK"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "412": {
                        "$ref": "#/components/responses/PreconditionFailedUserItem"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    }
                }
            },
            "patch": {
                "description": "updates one user",
                "summary": "updates one user",
                "tags": ["Users"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "userID",
                        "schema": {
                            "$ref": "#/components/schemas/attributeUserName"
                        },
                        "description": "the user ID",
                        "required": true
                    },
                    {
                        "in": "header",
                        "name": "if-match",
                        "description": "Revision control",
                        "required": true
                    }
                ],
                "requestBody": {
                    "description": "the user data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/patchUserInput"
                            }
                        }
                    }
                },
                "responses": {
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },

                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "412": {
                        "$ref": "#/components/responses/PreconditionFailedUserItem"
                    },
                    "200": {
                        "$ref": "#/components/responses/OKUser"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    }
                }
            }
        },
        "/subscriptions": {
            "get": {
                "description": "returns all subscriptions",
                "summary": "get all subscriptions",
                "tags": ["Subscriptions"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "query",
                        "name": "first",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1,
                            "maximum": 500,
                            "format": "int32"
                        },
                        "description": "the first subscription to return",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "n",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 6,
                            "maximum": 500,
                            "format": "int32"
                        },
                        "description": "the number of subscriptions to return",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "year",
                        "schema": {
                            "type": "string",
                            "example": "2020"
                        },
                        "description": "the year in it was canceled or created the subscription",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "createdOn",
                        "schema": {
                            "type": "string",
                            "example": "10"
                        },
                        "description": "the month in it was created",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "canceledOn",
                        "schema": {
                            "type": "string",
                            "example": "10"
                        },
                        "description": "the month in which the subscription was canceled",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "planID",
                        "schema": {
                            "type": "string",
                            "example": "Free"
                        },
                        "description": "the plan specified in the subscriptions",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OkSubscriptionCollection"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    }
                }
            },
            "post": {
                "description": "creates one subscription",
                "summary": "creates one subscription",
                "tags": ["Subscriptions"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "description": "the subscription data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/newSubscriptionInput"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "$ref": "#/components/responses/CreateSubscription"
                    },
                    "409": {
                        "$ref": "#/components/responses/Conflict"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    }
                }
            },
            "patch": {
                "description": "switch the plan of all the subscriptions of a specific plan",
                "summary": "switch the plan of all the subscriptions of a specific plan",
                "tags": ["Subscriptions"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "description": "The current plan of the subscriptions",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/patchSubscriptionInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OkSubscriptionCollection"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    }
                }
            }
        },
        "/subscriptions/{subscriptionID}": {
            "get": {
                "description": "returns one subscription",
                "summary": "get one subscription",
                "tags": ["Subscriptions"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "subscriptionID",
                        "schema": {
                            "$ref": "#/components/schemas/subscriptionID"
                        },
                        "description": "the subscription ID",
                        "required": true
                    }
                ],
                "responses": {
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "200": {
                        "$ref": "#/components/responses/OkSubscriptionItem"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    }
                }
            },
            "patch": {
                "description": "updates one subscription",
                "summary": "updates one subscription",
                "tags": ["Subscriptions"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "subscriptionID",
                        "schema": {
                            "$ref": "#/components/schemas/subscriptionID"
                        },
                        "description": "the subscription ID",
                        "required": true
                    }
                ],
                "requestBody": {
                    "description": "the subscription data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/patchSubscriptionInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OkSubscriptionItem"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "412": {
                        "$ref": "#/components/responses/PreconditionFailedSubscriptionItem"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    }
                }
            }
        },
        "/subscription/{subscriptionID}/deactivate": {
            "post": {
                "description": "deactivates one subscription",
                "summary": "deactivates one subscription",
                "tags": ["Subscriptions"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "subscriptionID",
                        "schema": {
                            "$ref": "#/components/schemas/subscriptionID"
                        },
                        "description": "the subscription ID",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OkSubscriptionItem"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "412": {
                        "$ref": "#/components/responses/PreconditionFailedSubscriptionItem"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    }
                }
            }
        },
        "/subscription/{subscriptionID}/renew": {
            "post": {
                "description": "renews one subscription",
                "summary": "renews one subscription",
                "tags": ["Subscriptions"],
                "parameters": [
                    {
                        "in": "path",
                        "name": "subscriptionID",
                        "schema": {
                            "$ref": "#/components/schemas/subscriptionID"
                        },
                        "description": "the subscription ID",
                        "required": true
                    }
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OkSubscriptionItem"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "412": {
                        "$ref": "#/components/responses/PreconditionFailedSubscriptionItem"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    }
                }
            }
        },
        "/subscription/{subscriptionID}/plan": {
            "get": {
                "description": "returns the plan of one subscription",
                "summary": "returns the plan of one subscription",
                "tags": ["Plans"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "subscriptionID",
                        "schema": {
                            "$ref": "#/components/schemas/subscriptionID"
                        },
                        "description": "the subscription ID",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OkPlanItem"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    }
                }
            },
            "patch": {
                "description": "updates the plan of one subscription",
                "summary": "updates the plan of one subscription",
                "tags": ["Subscriptions"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "subscriptionID",
                        "schema": {
                            "$ref": "#/components/schemas/subscriptionID"
                        },
                        "description": "the subscription ID",
                        "required": true
                    }
                ],
                "requestBody": {
                    "description": "the plan data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/upgradeSubscriptionPlanInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OkPlanItem"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "412": {
                        "$ref": "#/components/responses/PreconditionFailedPlanItem"
                    }
                }
            }
        },
        "/Subscriptions/{subscriptionID}/devices": {
            "get": {
                "description": "returns the devices of one subscription",
                "summary": "returns the devices of one subscription",
                "tags": ["Devices"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "subscriptionID",
                        "schema": {
                            "$ref": "#/components/schemas/subscriptionID"
                        },
                        "description": "the subscription ID",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OkDeviceCollection"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    }
                }
            },
            "post": {
                "description": "adds a device to one subscription",
                "summary": "adds a device to one subscription",
                "tags": ["Devices"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "subscriptionID",
                        "schema": {
                            "$ref": "#/components/schemas/subscriptionID"
                        },
                        "description": "the subscription ID",
                        "required": true
                    }
                ],
                "requestBody": {
                    "description": "the device data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/newDeviceInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/CreateDevice"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    }
                }
            }
        },
        "/Subscriptions/{subscriptionID}/devices/{deviceID}": {
            "patch": {
                "description": "updates a device of a subscription",
                "summary": "updates a device of a subscription",
                "tags": ["Devices"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "subscriptionID",
                        "schema": {
                            "$ref": "#/components/schemas/subscriptionID"
                        },
                        "description": "the subscription ID",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "deviceID",
                        "schema": {
                            "$ref": "#/components/schemas/deviceID"
                        },
                        "description": "the device ID",
                        "required": true
                    }
                ],
                "requestBody": {
                    "description": "the device data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/updateDeviceInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OKDeviceItem"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "412": {
                        "$ref": "#/components/responses/PreconditionFailedDeviceItem"
                    }
                }
            },
            "delete": {
                "description": "deletes a device of a subscription",
                "summary": "deletes a device of a subscription",
                "tags": ["Devices"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "subscriptionID",
                        "schema": {
                            "$ref": "#/components/schemas/subscriptionID"
                        },
                        "description": "the subscription ID",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "deviceID",
                        "schema": {
                            "$ref": "#/components/schemas/deviceID"
                        },
                        "description": "the device ID",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OK"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "412": {
                        "$ref": "#/components/responses/PreconditionFailedDeviceItem"
                    }
                }
            }
        },
        "/plans": {
            "get": {
                "description": "returns all plans",
                "summary": "returns all plans",
                "tags": ["Plans"],
                "security": [],
                "parameters": [
                    {
                        "in": "query",
                        "name": "first",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 1,
                            "maximum": 500,
                            "format": "int32"
                        },
                        "description": "the first user to return",
                        "required": false
                    },
                    {
                        "in": "query",
                        "name": "n",
                        "schema": {
                            "type": "integer",
                            "minimum": 1,
                            "default": 6,
                            "maximum": 500,
                            "format": "int32"
                        },
                        "description": "the number of users to return",
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OkPlanCollection"
                    }
                }
            }
        },
        "/plans/{planID}": {
            "get": {
                "description": "returns a plan",
                "summary": "returns a plan",
                "tags": ["Plans"],
                "security": [],
                "parameters": [
                    {
                        "in": "path",
                        "name": "planID",
                        "schema": {
                            "$ref": "#/components/schemas/attrPlanID"
                        },
                        "description": "the plan ID",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OkPlanItem"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    }
                }
            },
            "put": {
                "description": "creates or updates a plan",
                "summary": "creates or updates a plan",
                "tags": ["Plans"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "planID",
                        "schema": {
                            "$ref": "#/components/schemas/attrPlanID"
                        },
                        "description": "the plan ID",
                        "required": true
                    }
                ],
                "requestBody": {
                    "description": "the plan data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/newPlanInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OkPlanItem"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "412": {
                        "$ref": "#/components/responses/PreconditionFailedPlanItem"
                    }
                }
            },
            "delete": {
                "description": "deletes a plan",
                "summary": "deletes a plan",
                "tags": ["Plans"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "planID",
                        "schema": {
                            "$ref": "#/components/schemas/attrPlanID"
                        },
                        "description": "the plan ID",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OK"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "412": {
                        "$ref": "#/components/responses/PreconditionFailedPlanItem"
                    }
                }
            },
            "patch": {
                "description": "updates a plan",
                "summary": "updates a plan",
                "tags": ["Plans"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "planID",
                        "schema": {
                            "$ref": "#/components/schemas/attrPlanID"
                        },
                        "description": "the plan ID",
                        "required": true
                    }
                ],
                "requestBody": {
                    "description": "the plan data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/changePlanDetailsInput"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OkPlanItem"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "412": {
                        "$ref": "#/components/responses/PreconditionFailedPlanItem"
                    }
                }
            }
        },
        "/plans/{planID}/deactivate": {
            "post": {
                "description": "deactivates a plan",
                "summary": "deactivates a plan",
                "tags": ["Plans"],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "in": "path",
                        "name": "planID",
                        "schema": {
                            "$ref": "#/components/schemas/attrPlanID"
                        },
                        "description": "the plan ID",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/components/responses/OkPlanItem"
                    },
                    "400": {
                        "$ref": "#/components/responses/BadRequest"
                    },
                    "401": {
                        "$ref": "#/components/responses/Unauthorized"
                    },
                    "403": {
                        "$ref": "#/components/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/components/responses/NotFound"
                    },
                    "412": {
                        "$ref": "#/components/responses/PreconditionFailedPlanItem"
                    }
                }
            }
        }
    },
    "tags": []
}
