@startuml
'https://plantuml.com/sequence-diagram

skin rose
skinparam shadowing false
participant "Client" as CL
participant "Gateway" as Gateway
participant "Subscription Service" as SS
participant "Plan Service" as PS
participant "User Service" as US
database  "Subscription Database" as DB

CL -> Gateway : Post /user/login {username,password}
Gateway -> US: Post /user/login {userName}
US --> Gateway: 200 OK
Gateway --> CL: 200 OK
CL-> Gateway : Put /subscription {subscriptionID}
Gateway -> SS : PutSubscription /plan{subscriptionID,\n headers:{username,userRole} body:{planID,type}}
alt Missing planID , Type or Subscription
 SS--> Gateway: 400 Bad Request {errorMessage:You need to provide a valid 'userID', \n 'planID', 'type' and 'id' of a subscription.}
 Gateway --> CL: 400 Bad Request {errorMessage:You need to provide a valid 'userID', \n 'planID', 'type' and 'id' of a subscription.}
else UserName/Token missing
 SS --> Gateway: 401 Unauthorized {errorMessage:You need to be authenticated \n to add a subscription to a plan.}
 Gateway--> CL: 401 Unauthorized {errorMessage:You need to be authenticated \n to add a subscription to a plan.}
else Invalid Subscription Type
 SS --> Gateway: 400 Bad Request {errorMessage:You need to provide a valid 'type'\n of a subscription}
 Gateway --> CL: 400 Bad Request {errorMessage:You need to provide a valid 'type'\n of a subscription}
else Subscription Already Exists
 SS--> Gateway: 400 Bad Request {errorMessage: Subscription already exists}
 Gateway --> CL: 400 Bad Request {errorMessage: Subscription already exists}
else New Subscription
 SS -> PS : Get /plans
alt   Plan NOT FOUND
 PS --> SS: 404 Not Found
 SS --> Gateway : 404 Not Found {errorMessage:Plan not found}
 Gateway --> CL: 404 Not Found {errorMessage:Plan not found}
else Plan Found
 PS --> SS: 200 OK {plan}
 SS -> US: Get /users{username}
alt User Not Found
 US-->SS: 404 Not Found
 SS--> Gateway: 404 Not Found {errorMessage:User not found}
 Gateway --> CL: 404 Not Found {errorMessage:User not found}
else User Found
 US --> SS: 200 OK {user}
 SS ->DB : addSubscription({subscriptionInformation})
 DB--> SS: subscription
 SS --> Gateway: 201 Created {subscription}
 Gateway --> CL: 201 Created {subscription}
end
end
end
@enduml